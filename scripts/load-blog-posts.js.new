async function loadBlogPosts() {
    const blogPostsContainer = document.getElementById('blog-posts');
    
    try {
        // Get the pre-built blog posts JSON
        const response = await fetch('/dist/blog-posts.json');
        const posts = await response.json();
        
        if (!posts || posts.length === 0) {
            console.error('No posts found in JSON file');
            blogPostsContainer.innerHTML = '<p>No blog posts found.</p>';
            return;
        }
        
        for (const post of posts) {  // posts are already sorted in build-blog.js
            // Create a blog post preview element
            const postElement = document.createElement('article');
            postElement.className = 'blog-post-preview';
            
            // Create post header
            const postHeader = document.createElement('header');
            
            // Create title with link
            const titleH2 = document.createElement('h2');
            const titleLink = document.createElement('a');
            const postUrl = window.location.origin + `/blog/post.html?id=${encodeURIComponent(post.filename)}`;
            
            titleLink.href = postUrl;
            titleLink.textContent = post.title || 'Untitled Post';
            
            // Handle click with navigation
            titleLink.addEventListener('click', function(e) {
                e.preventDefault();
                console.log('Link clicked, navigating to:', this.href);
                window.location = this.href;
            });
            
            titleH2.appendChild(titleLink);
            postHeader.appendChild(titleH2);
            
            // Add date
            const dateTime = document.createElement('time');
            dateTime.setAttribute('datetime', post.date);
            dateTime.textContent = new Date(post.date).toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            postHeader.appendChild(dateTime);
            
            // Add tags if they exist
            if (post.tags && post.tags.length > 0) {
                const tagsDiv = document.createElement('div');
                tagsDiv.className = 'tags';
                post.tags.forEach(tag => {
                    const tagSpan = document.createElement('span');
                    tagSpan.className = 'tag';
                    tagSpan.textContent = `#${tag}`;
                    tagsDiv.appendChild(tagSpan);
                });
                postHeader.appendChild(tagsDiv);
            }
            
            // Create preview content
            const previewContent = document.createElement('div');
            previewContent.className = 'post-preview';
            
            // Parse and extract preview text
            const parsedContent = marked.parse(post.content);
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = parsedContent;
            const textContent = tempDiv.textContent;
            
            // Add preview text
            const previewText = document.createElement('p');
            previewText.textContent = textContent.slice(0, 150) + '...';
            previewContent.appendChild(previewText);
            
            // Add "Read more" link
            const readMoreLink = document.createElement('a');
            readMoreLink.href = postUrl;
            readMoreLink.className = 'read-more';
            readMoreLink.textContent = 'Read more â†’';
            
            // Handle click with navigation
            readMoreLink.addEventListener('click', function(e) {
                e.preventDefault();
                console.log('Read more clicked, navigating to:', this.href);
                window.location = this.href;
            });
            
            previewContent.appendChild(readMoreLink);
            
            // Assemble the preview
            postElement.appendChild(postHeader);
            postElement.appendChild(previewContent);
            blogPostsContainer.appendChild(postElement);
        }
        
    } catch (error) {
        console.error('Error loading blog posts:', error);
        console.error(error);
        blogPostsContainer.innerHTML = '<p>Error loading blog posts. Please try again later.</p>';
    }
}

// Load blog posts when the page loads
document.addEventListener('DOMContentLoaded', loadBlogPosts);
